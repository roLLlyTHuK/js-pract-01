//TODO: ‚Ññ 1 ==============================================
//–í–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏, —â–æ–± –∫–æ–¥ –ø—Ä–∞—Ü—é–≤–∞–≤

// const product = {
//   price: 5000,
//   showPrice() {
//     console.log(this.price);
//   },
// };
// product.showPrice();

//TODO: ‚Ññ 2 ==============================================
// –Ø–∫–∏–º –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó?

// function f() {
//   console.log(this.name);
// }
// const foo = f.bind({ name: "–Ü–≤–∞–Ω" }).bind({ name: "Juan" });
// foo();

//TODO: ‚Ññ 3 ==============================================
//–í–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏, —â–æ–± –∫–æ–¥ –ø—Ä–∞—Ü—é–≤–∞–≤

// function callAction(action) {
//   action();
// }

// const item = {
//   getQuatity() {
//     console.log(this.quantity);
//   },
//   quantity: 5,
// };

// callAction(item.getQuatity.bind(item));

//TODO: ‚Ññ 4 ==============================================

// –§—É–Ω–∫—Ü—ñ—è askPassword –ø—Ä–∏–π–º–∞—î 2 –∫–æ–ª–±–µ–∫–∞ —ñ –≤–∏–∫–ª–∏–≤–∞—î 1 —ñ—Ö –Ω–∏—Ö –≤ –∑–∞–¥–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –ø–∞—Ä–æ–ª—è

// function askPassword(ok, fail) {
//   let password = prompt("Password? ü§î");
//   if (password === "admin") ok();
//   else fail();
// }

// const user = {
//   name: "aaa",

//   loginOk() {
//     alert(`${this.name} logged in`);
//   },

//   loginFail() {
//     alert(`${this.name} failed to log in`);
//   },
// };

// askPassword(user.loginOk.bind(user), user.loginFail.bind(user));

// –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±–µ–∫—Ç user –∑ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é name —ñ –¥–≤–æ–º–∞ –º–µ—Ç–æ–¥–∞–º–∏
// loginOk() i loginFail()
// —Ü—ñ –º–µ—Ç–æ–¥–∏ –≤–∏–≤–æ–¥—è—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ
// "<name> logged in" i "<name> failed to log in" –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ
// –∑—Ä–æ–±–∏ –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó askPassword, –ø—Ä–∏–≤—è–∑–∞–≤—à–∏ –≤ —è–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ—Ç—ñ–≤ –º–µ—Ç–æ–¥–∏ –æ–±–µ–∫—Ç–∞


//TODO: ‚Ññ 5 –Ω–∞ class-–∏  =============================================
//–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä User –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–∫–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏
//a. userName - —ñ–º'—è, —Ä—è–¥–æ–∫
//b. age - –≤—ñ–∫, —á–∏—Å–ª–æ
//c. numbersOfPost - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
//d. –∫–ª–∞—Å –æ—á—ñ–∫—É—î 1 –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏

//–î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫:
//`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ ${} ${} —Ä–æ–∫—ñ–≤ —ñ –≤ –Ω—å–æ–≥–æ ${} –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π.`


// class User {
//     constructor({ userName, age, numbersOfPost }) {
//         this.userName = userName;
//         this.age = age;
//         this.numbersOfPost = numbersOfPost;
//     }

//     getInfo() {
//         return `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ ${this.userName} ${this.age} —Ä–æ–∫—ñ–≤ —ñ –≤ –Ω—å–æ–≥–æ ${this.numbersOfPost} –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π.`
//     }

// } 

// const user1 = new User({ userName: "Olga", age: 22, numbersOfPost: 105 });
// console.log(user1);
// console.log(user1.getInfo());

// TODO: ‚Ññ 7 –Ω–∞ class-–∏ =============================================
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Notes —è–∫–∏–π —É–ø—Ä–∞–≤–ª—è—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É
// –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items.
// –ù–æ—Ç–∞—Ç–∫–∞ - —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —ñ priority.
// –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω–∏–π –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å Priopity,
// —è–∫–∏–π –±—É–¥–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ ("high" i "low").
// –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ addNote(note), removeNote(noteName)
// updatePriority(text, newPriority)

// class Notes {
//   static Priority ={
//    high : "high",
//    low : "low",
//   }

//   constructor () {
//     this.items = [];
//   }
//   showNotes(){
//     console.log(this.items)
//   }
//   addNote(note){
//     this.items.push(note)
//   }
//   removeNote(noteName){
//     const indexItem =this.items.findIndex(item=> item.text === noteName)
//     if (indexItem !== -1){
//      return this.items.splice(indexItem,1)}
//     }
  
//   updatePriority(text, newPriority){
//    const indexItem =this.items.findIndex(item=> item.text === text)
//    if (indexItem !== -1){
//     this.items[indexItem].priority = newPriority;
//    }
//   }
// }
// const notes =new Notes();
// notes.addNote({text:"–ó–∞–≤–¥–∞–Ω–Ω—è", priority: Notes.Priority.high});
// notes.addNote({text:"–ó–∞–≤–¥–∞–Ω–Ω—è2", priority:Notes.Priority.low});
// notes.addNote({text:"–ó–∞–≤–¥–∞–Ω–Ω—è3", priority: Notes.Priority.high});
// notes.showNotes();
// notes.removeNote("–ó–∞–≤–¥–∞–Ω–Ω—è");
// notes.showNotes();
// notes.updatePriority("–ó–∞–≤–¥–∞–Ω–Ω—è2", Notes.Priority.high);
// notes.showNotes();

//TODO: –Ω–∞ class ======================
//  –ù–∞–ø–∏—Å–∞—Ç–∏ –∫–ª–∞—Å, —è–∫–∏–π –±—É–¥–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç–∏ –∑–æ–æ–ø–∞—Ä–∫ —Ç–≤–∞—Ä–∏–Ω.
//  –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–≥–∞–ª—å–Ω–∏–π –∫–ª–∞—Å Animal –¥–ª—è —Ç–≤–∞—Ä–∏–Ω.
// –£ –∑–æ–æ–ø–∞—Ä–∫—É –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ —Ç–≤–∞—Ä–∏–Ω, —Ç–∞–∫—ñ —è–∫ —Å—Å–∞–≤—Ü—ñ, –ø—Ç–∞—Ö–∏, —Ä–µ–ø—Ç–∏–ª—ñ—ó —Ç–æ—â–æ.
// –ö–æ–∂–µ–Ω —Ç–∏–ø —Ç–≤–∞—Ä–∏–Ω –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ —Å–≤–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥,
//  –º–µ—Ç–æ–¥–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ç–≤–∞—Ä–∏–Ω—É —Ç–∞ –¥–ª—è –≥–æ–¥—ñ–≤–ª—ñ —Ç–≤–∞—Ä–∏–Ω.
//  –ö—Ä—ñ–º —Ç–æ–≥–æ, –∑–æ–æ–ø–∞—Ä–∫ –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–≤–∞—Ä–∏–Ω –¥–æ —Å–ø–∏—Å–∫—É —Ç–∞
// –º–µ—Ç–æ–¥ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö —Ç–≤–∞—Ä–∏–Ω —É –∑–æ–æ–ø–∞—Ä–∫—É.

// class Animal {
//     constructor(name, species, age) {
//         this.name = name;
//         this.species = species;
//         this.age = age;
//     }

//     get_info() {
//         return `Name: ${this.name}, Species: ${this.species}, Age: ${this.age}`;
//     }

//     feed() {
//         return `${this.name} is being fed.`;
//     }
// }

// class Zoo {
//     constructor(name) {
//         this.name = name;
//         this.animals = [];
//     }

//     add_animal(animal) {
//         if (animal instanceof Animal) {
//             this.animals.push(animal);
//             return `${animal.name} has been added to ${this.name}'s zoo.`;
//         } else {
//             return "Only instances of the Animal class can be added to the zoo.";
//         }
//     }

//     list_animals() {
//         if (this.animals.length > 0) {
//             const animal_list = this.animals.map(animal => animal.get_info()).join('\n');
//             return `Animals in ${this.name}'s zoo:\n${animal_list}`;
//         } else {
//             return `There are no animals in ${this.name}'s zoo.`;
//         }
//     }
// }


// const zoo1 = new Zoo("San Diego Zoo");
// const lion = new Animal("Simba", "Lion", 5);
// const elephant = new Animal("Dumbo", "Elephant", 8);
// const penguin = new Animal("Penny", "Penguin", 3);

// console.log(zoo1.add_animal(lion));
// console.log(zoo1.add_animal(elephant));
// console.log(zoo1.add_animal(penguin));
// console.log(zoo1.list_animals());
// console.log(lion.feed());



//TODO: ‚Ññ 6 –Ω–∞ class-–∏ =============================================
//–ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Client —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç
//–∑ ‚Äã‚Äã–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login email
//–û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login #email,
//–¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä
// get clientData() –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –æ—é–µ–∫—Ç –∑ –ø–µ—Ä–µ–ª—ñ—á–µ–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏
// set changeEmail(newEmail) —è–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É—î –ø–æ—á—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

// class Client {
//     #login;
//     #email;

//     constructor(login, email) {
//         this.#login = login;
//         this.#email = email;
//     }

//     get login() {
//         return this.#login;
//     }

//     set login(newLogin) {
//         this.#login = newLogin;
//     }

//     get email() {
//         return this.#email;
//     }

//     set email(newEmail) {
//         this.#email = newEmail;
//     }

//     get clientData() {
//         return {
//             login: this.#login,
//             email: this.#email
//         };
//     }
// }

// const client1 = new Client("user123", "user123@example.com");

// console.log(client1.clientData); 
// client1.email = "new.email@example.com"; 